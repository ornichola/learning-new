"""
На нашем компьютере 120Gb оперативной памяти. Жесткий диск отсутствует, либо настолько маленького размера,
позволяющий только иметь операционную систему, установленный python и нашу программу.
Дана строка my_str из цифр, которая занимает в оперативной памяти 100Gb.
Необходимо написать код, который отсортирует данную строку.
На выходе должен получиться объект my_str с типом <str> и содержащий отсортированную исходную строку.
Печать символов не считается решением.

my_str = '0409128473242875610432423...'  # 100Gb
# <your code here>
print(my_str)  # prints '0000000111111222222....'
"""

import gc

my_str = '0409128473242875610432423...'  # 1Gb из 1.2Gb


# считаем каждую цифру
count_0 = my_str.count('0')
count_1 = my_str.count('1')
count_2 = my_str.count('2')
count_3 = my_str.count('3')
count_4 = my_str.count('4')
count_5 = my_str.count('5')
count_6 = my_str.count('6')
count_7 = my_str.count('7')
count_8 = my_str.count('8')
count_9 = my_str.count('9')

del my_str
gc.collect()

# передаем счетчик и значение в format padding (конструкция :^), который создает и соединяет куски строк в cPython,
# возвращая в Python готовую цельную строку без выделения необходимой памяти
my_str = f'{0:0^{count_0}}{1:1^{count_1}}{2:2^{count_2}}'


print(my_str)  # prints '0000000111111222222....'
